INTRODUCTION


The World Wide Web
It is a collection of webpages.
It is invented by Sir Tim Berners-Lee who is a british scientist in CERN to spread scientific discovery to other researchers worldwide.
It is considered to be the greatest information system.

The World Wide Web was based in these three (3) core technologies:
HTTP
HTML
URL

Hypermedia
one document that contain link to other documents.

2 Kinds of Resource:
Static Resource – The resources already exist in the web server.
Dynamic Resource – Resource that is produced on the fly.
(ex. Google image search)

    WWW plays one of two roles. Either server which provides functionalities / server application.

Application
web servers (hosting or storing)
wait connection of clients
web client (browser)

Webservers
Hosting or storing of web resources
Waits for clients to request those resources.

Web crawler (a.k.a Web Spider)
This application crawls the web and harvests information

Inter-Network
    Internet - global network
    inter - across boundaries
    network - establishing a connection (interconnection)







How the Web Works

    PCs associated with the web are called clients and servers. This is a simple diagram on how they interact:

*****IMAGE TO BE REPLACED*****



Clients
The typical devices that use the web. (mobile phone, computers)

Servers
Computers that stores webpages and websites.

 What happens when we type a URL in our browsers:

The browser will first go to the DNS server and it will find the address of the server.

The browser now sends an HTTP request message to the server asking for a copy of the website to the client.

If the server approves the client’s requests, the server now sends an “OK” message (200 OK) and it will now start sending data packets of the website’s files.
*NOTE*
Data Packets - data that is chopped into smaller pieces.

The browsers assemble the received data packets into a complete website and displays it to the client.

HTTP
Hypertext Transfer Protocol

an application layer communications protocol used to access resources (hypertext / hypermedia) on the world wide web

invented by TimBerners-Lee at CERN 1989

jointly developed by W3C and IETF(Internet Engineering Task Force)

is stateless

HTTP was based on a client-server architecture
Servers
Origin servers - resides actual resource
Proxy servers, gateways, tunnels
*NOTE:
Gateways - connection across networks
Tunnels - more on encryption
Clients / UA (User Agents)
web browsers, web crawlers / spiders, other end user tools and applications

HTTP uses a request-response standard protocol
the clients send on HTTP request message to the server
the server processes the request and replies with an HTTP response message


Physical Layer
Highest Layer (application layer)
    E.g: browsers (chrome) / webserver (apache)

Bandwidth Hog
sending large chunk of data
Solution: chunk it up to “packets”


HTTP support for other functionality
Cache controls
Content media type (MIME - Multipurpose Internet Mail Extensions) spec
What resource is sending
Language and character set specification
Specify the language English in ASCII
content/transfer codings compression
Content negotiation
Client - Server protocol negotiation
Switch protocol for specific transfer
Persistent connection (ex. 400 transfer in one page)
Request pipelining
Authentication or authorization

OSI Model (7 layers)
retrieve web resources
Send http request message to the server

HTTP Versions:

HTTP 0.9(1991)
port 80 was used
request: “GET + URL” response: assumed to be HTML

HTTP 1.0 (RFC 1996)
methods GET, HEAD, and POST was added
status code definitions were introduced and header field definitions

HTTP 1.1 (1999 -2014)
provision of persistent connections (greatest contribution)
*NOTE:
Persistent connections (HTTP keep-alive) - allows both the
client and the server to use the same TCP connection. This
allows them to send and receive multiple HTTP requests and
responses. 


HTTP 2
-comes from GOOGLE SPDY-
-Heading compression
-Server push to lessen the page
-pipelining request - allows the requests responses to be split into chunks and be returned in an intermingled fashion so avoiding head of line blocking.
-transfer of data(optimized)

FUNDAMENTAL
- HTTP typically runs on top of TCP/IP using TCP port by default or TCP port 443 for HTTPS (HTTP over SSL/TLS)

IANA is a department for ICANN
IANA – a department responsible for coordinating key elements to keep the internet run smoothly
    - allocate and maintain codes and numbering system that are used in technical standards that drive the internet
-Domain Names
-Number Resources
-Protocol Assginment

SERVERS
-origin servers
-proxy servers, gateways, tunnels

CLIENTS
-aka user agents (UA)
-web browsers, web crawlers/spiders, other user tools and application

HTTP resource are identified using URL

Components of URL for HTTP(or HTTPS)
Scheme


Host
A domain name (resolved to an IP address using DNS) of the server where the resource reside or will be created
Path
Resolved relative to the document root on the server
May refer to a static or dynamic resource
Query
Start with ? (ex ?id=12234)
Typically provided as key=value pairs, with (&) separates between key/value pairs (ex.?size=M&color=red)
It maybe URL-encoded
Fragment Identifier
Refer to a bookmark
Only part not sent to the server


HTTP Request Message
Request line
Message Headers
Empty Line(CRLF - Carriage Return, Line Feed)
Message Body aka payload

HTTP Response Message
Status Line - protocol version, status code, reason phrase
Message headers
Empty Line(CRLF)
Message Body(optional)


HTTP Request Methods
GET - request a representation of the resource that would retrieve data 
HEAD - asks for a copy similar to GET request but have no response body
POST - submit entity to the specified resource and often change the state of the server
PUT - create or replace the state of the targeted resource
DELETE - removes the connection between the target resource and its functionality
OPTIONS - ask information in the communication options that is available
TRACE - request/remote, application level(loopback message that is used to tesing of the request/response drain
CONNECT - request the establishment tunnel to the destination origin server
*SAFE METHOD
Idempotent - intended effect on the server of multiple identical requests
*Cacheable METHOD


HTTP Message Headers
1.	General Header Fields - can be used by both clients and servers
Can be seen both in request and response
2.	Request Header Field - can only be seen in the request message(client side)
3.	Response Header Field - can only be seen in the response message(server side)
4.	Entity Header - cantainsinformation that is in the payload


HTTP status code 
1.	Informational(1xx)
		100 Continue
		101 Switching Protocols
		102 Processing
2.	 Success(2xx)
		200 OK
		201 Created
		202 Accepted
		203 Non-authoritative Information
		204 No Content
		205 Reset Content
		206 Partial Content
		207 Multi-Status
		208 Already Reported
		226 IM Used
3.	 Redirection(3xx)
		300 Multiple Choices
		301 Moved Permanently
		302 Found
		303 See Other
		304 Not Modified
		305 Use Proxy
		307 Temporary Redirect
		308 Permanent Redirect
4.	 Client Error(4xx)
		400 Bad Request
		401 Unauthorized
		402 Payment Required
		403 Forbidden
		404 Not Found
		405 Method Not Allowed
		406 Not Acceptable
		407 Proxy Authentication Required
		408 Request Timeout
		409 Conflict
		410 Gone
		411 Length Required
		412 Precondition Failed
		413 Payload Too Large
		414 Request-URI Too Long
		415 Unsupported Media Type
		416 Requested Range Not Satisfiable
		417 Expectation Failed
		418 I'm a teapot
		421 Misdirected Request
		422 Unprocessable Entity
		423 Locked
		424 Failed Dependency
		426 Upgrade Required
		428 Precondition Required
		429 Too Many Requests
		431 Request Header Fields Too Large
		444 Connection Closed Without Response
		451 Unavailable For Legal Reasons
		499 Client Closed Request


5.	 Server Error(5xx)
		500 Internal Server Error
		501 Not Implemented
		502 Bad Gateway
		503 Service Unavailable
		504 Gateway Timeout
		505 HTTP Version Not Supported
		506 Variant Also Negotiates
		507 Insufficient Storage
		508 Loop Detected
		510 Not Extended
		511 Network Authentication Required
		599 Network Connect Timeout Error


HTTP Extensions *WevDAV (Distributes Authority Version
*HTTP can be extended by defining new request methods, message headers and/or status codes, and then implementing servers and/or clients that make us of the new functionality*



HTML(Hypertext Markup Language)
Language us to mark up document
Application of SGML(Standard Generalized Markup Language)
modern web developerpractice solelyfor semantic specification of web page structure and the contentwith the presentation aspect delegates to stylesheet
Html before was used to specify the structure and content together with the presentation of the web page
Developed at CERN followed by IETF then the W3C and also WHATWG

Version History
	HTML Tags Tim-Berners Lee, late 1991
HTML 2.0 (RFC 1866)
	Form -based File Upload
	HTML table
	Client - Side Image Maps
	i18n(Internationalization
HTML 3.2 (W3C Recommendation, Jan 1997)
HTML 4.0 (W3C Recommendation, Dec 1997)
HTML 4.1 (W3C Recommendation, Dec 1999)
- introduced depreciation of presentation elements and attributes in favor of style sheets
	- Strict, Transitional, Frameset DTDs(Document Type Definition)
XHTML
	-The updated version of HTML in XML that made in writing the codes stricter
	- It is intended to make make the programmers follow the norm in coding, provide interopability in HTML and XML 

HTML 5.0
Not all developers wanted the XHTML and Ian Hickson is one of them. He oppose in continuing the XHTML and says it is better to modernized HTML5 instead of XHTML
The WHATWG undertake in HTML 5 and W3C joins in
HTML 5 is now updated HTML 4 and XHTML and it depends on the user what they want to use

HTML 5 (W3C Recommendation, Oct 2014)
HTML 5.1 (W3C Recommendation, Nov 2016)
HTML 5.2 (W3c Recommendation, Dec 2017)
HTML Living Standard (WHATWG)


HTML Document Structure
Versions information(ex DOCTYPE)
Root element(html)
Header section that contains document metadata,
HTML 5 <DOCTYPE html> 
Case insensitive
Standard mode
Quirks mode - deals with older browser with nesting rendering
HTML 4 DOCTYPE
Strict
Traditional
Frameset
Elements (HTML 4.01, XHTML 1.0, HTML 5)
		Ex. <a href = “____”> Trial </a>
Tags


Content 
Content Models 
Void Elements (ex br, hr, img)




Attributes and Attribute values
Global attribute
Apply across the board (ex class, id)
Custom Non-Visible
Apply own attribute (data-*)
WAI-ARIA Attributes (WCAG)
Elements-Specific Attributes
Attributes to specific elements
MathML, SVG(Scalable Vector Graphics)
bitmapped
vector(not to loose quality)
Character Reference
Representation to a character for a special symbol (ex > = &gt)
Comments
<!--	→

HTML Preprocessor
Tools in making the codes easier

*****MIDTERMS*****
CSS
What is CSS?

    Cascading Style Sheets or CSS is a language that is independent of HTML that allows developers to edit the presentation of attributes, layouts, and other HTML elements in a Web page. CSS can also be used in XML-based markup language. It is independent with HTML so that it is easier to maintain web pages and easier to share these stylesheets with other HTML files. This is referred as separation of structure (or content) from a presentation. 
    
History of CSS

    In 1994, the Web is starting to be used as an electronic publishing platform. But at the time, HTML does not have a way to style documents which is an important part of a publishing platform. And then Hakun Wium Lie and Bert Bros developed CSS. 

CSS Versions

    CSS does not have a particular versions unlike HTML. Instead, it has versions, which means that every level of CSS is built upon the previous versions with some definitions being redefined and more features are being added. 

CSS Level 1  or CSS1 (December 1996)
    The CSS1 specification is considered by the CSS Working Group (CSS WG) to be obsolete. 
CSS Level 2 or CSS2 (May 1998)
        
CSS Level 2 Revision 1 (June 2011)
This version contains a definitive definition to prevent any conflict between between CSS2 and CSS2 Revision 1.
CSS Level 3 
    This level was built on CSS2 module by module. It replaces some part of CSS2 Revision 1 and also, modules add functionalities from to CSS 2 Revision 1.







Three Types of CSS

Inline Styles
These styles are written directly in the HTML file. It only affects the specified tag that they are applied to.

Embedded Styles
    These styles are still written directly in the HTML file but its difference from inline style is that it is embedded in the head of the document. It affects the HTML file that it was embedded on.

External Style Sheets
    These styles are written in a separate document and then it was attached to different web documents. Most of the websites today use this type.



HTML Stylesheets
    The sources of styles for HTML language.
